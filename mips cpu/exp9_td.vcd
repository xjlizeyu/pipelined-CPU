$date
	Tue Dec 31 10:54:00 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module exp9_td $end
$var wire 4 ! out [3:0] $end
$var reg 1 " clk $end
$var reg 12 # code [11:0] $end
$var reg 4 $ data [3:0] $end
$scope module i $end
$var wire 1 " clk $end
$var wire 12 % code [11:0] $end
$var wire 4 & data_in [3:0] $end
$var wire 4 ' out3 [3:0] $end
$var wire 4 ( out2 [3:0] $end
$var wire 4 ) out1 [3:0] $end
$var reg 3 * c [2:0] $end
$var reg 4 + data1 [3:0] $end
$var reg 4 , data2 [3:0] $end
$var reg 4 - op [3:0] $end
$var reg 4 . out [3:0] $end
$scope module u0 $end
$var wire 4 / a [3:0] $end
$var wire 4 0 addr1 [3:0] $end
$var wire 4 1 addr2 [3:0] $end
$var wire 1 " clk $end
$var wire 1 2 state1 $end
$var wire 2 3 state2 [1:0] $end
$var wire 4 4 data3 [3:0] $end
$var wire 4 5 data1 [3:0] $end
$var reg 4 6 data [3:0] $end
$var reg 4 7 data2 [3:0] $end
$var reg 4 8 out1 [3:0] $end
$var reg 4 9 out2 [3:0] $end
$var reg 1 : r1 $end
$var reg 1 ; r2 $end
$var reg 1 < read $end
$var reg 1 = s $end
$var reg 1 > write $end
$scope module u0 $end
$var wire 4 ? address [3:0] $end
$var wire 1 " clk $end
$var wire 4 @ data [3:0] $end
$var wire 1 = en $end
$var wire 1 : rst $end
$var wire 4 A rout9 [3:0] $end
$var wire 4 B rout8 [3:0] $end
$var wire 4 C rout7 [3:0] $end
$var wire 4 D rout6 [3:0] $end
$var wire 4 E rout5 [3:0] $end
$var wire 4 F rout4 [3:0] $end
$var wire 4 G rout3 [3:0] $end
$var wire 4 H rout2 [3:0] $end
$var wire 4 I rout15 [3:0] $end
$var wire 4 J rout14 [3:0] $end
$var wire 4 K rout13 [3:0] $end
$var wire 4 L rout12 [3:0] $end
$var wire 4 M rout11 [3:0] $end
$var wire 4 N rout10 [3:0] $end
$var wire 4 O rout1 [3:0] $end
$var wire 4 P rout0 [3:0] $end
$var reg 4 Q rout [3:0] $end
$scope module l0 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 R data [3:0] $end
$var wire 1 S en $end
$var wire 4 T q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 U din $end
$var wire 1 S enabler $end
$var wire 1 : reset $end
$var reg 1 V dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 W din $end
$var wire 1 S enabler $end
$var wire 1 : reset $end
$var reg 1 X dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 Y din $end
$var wire 1 S enabler $end
$var wire 1 : reset $end
$var reg 1 Z dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 [ din $end
$var wire 1 S enabler $end
$var wire 1 : reset $end
$var reg 1 \ dout $end
$upscope $end
$upscope $end
$scope module l1 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 ] data [3:0] $end
$var wire 1 ^ en $end
$var wire 4 _ q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 ` din $end
$var wire 1 ^ enabler $end
$var wire 1 : reset $end
$var reg 1 a dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 b din $end
$var wire 1 ^ enabler $end
$var wire 1 : reset $end
$var reg 1 c dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 d din $end
$var wire 1 ^ enabler $end
$var wire 1 : reset $end
$var reg 1 e dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 f din $end
$var wire 1 ^ enabler $end
$var wire 1 : reset $end
$var reg 1 g dout $end
$upscope $end
$upscope $end
$scope module l10 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 h data [3:0] $end
$var wire 1 i en $end
$var wire 4 j q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 k din $end
$var wire 1 i enabler $end
$var wire 1 : reset $end
$var reg 1 l dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 m din $end
$var wire 1 i enabler $end
$var wire 1 : reset $end
$var reg 1 n dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 o din $end
$var wire 1 i enabler $end
$var wire 1 : reset $end
$var reg 1 p dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 q din $end
$var wire 1 i enabler $end
$var wire 1 : reset $end
$var reg 1 r dout $end
$upscope $end
$upscope $end
$scope module l11 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 s data [3:0] $end
$var wire 1 t en $end
$var wire 4 u q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 v din $end
$var wire 1 t enabler $end
$var wire 1 : reset $end
$var reg 1 w dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 x din $end
$var wire 1 t enabler $end
$var wire 1 : reset $end
$var reg 1 y dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 z din $end
$var wire 1 t enabler $end
$var wire 1 : reset $end
$var reg 1 { dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 | din $end
$var wire 1 t enabler $end
$var wire 1 : reset $end
$var reg 1 } dout $end
$upscope $end
$upscope $end
$scope module l12 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 ~ data [3:0] $end
$var wire 1 !" en $end
$var wire 4 "" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 #" din $end
$var wire 1 !" enabler $end
$var wire 1 : reset $end
$var reg 1 $" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 %" din $end
$var wire 1 !" enabler $end
$var wire 1 : reset $end
$var reg 1 &" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 '" din $end
$var wire 1 !" enabler $end
$var wire 1 : reset $end
$var reg 1 (" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 )" din $end
$var wire 1 !" enabler $end
$var wire 1 : reset $end
$var reg 1 *" dout $end
$upscope $end
$upscope $end
$scope module l13 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 +" data [3:0] $end
$var wire 1 ," en $end
$var wire 4 -" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 ." din $end
$var wire 1 ," enabler $end
$var wire 1 : reset $end
$var reg 1 /" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 0" din $end
$var wire 1 ," enabler $end
$var wire 1 : reset $end
$var reg 1 1" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 2" din $end
$var wire 1 ," enabler $end
$var wire 1 : reset $end
$var reg 1 3" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 4" din $end
$var wire 1 ," enabler $end
$var wire 1 : reset $end
$var reg 1 5" dout $end
$upscope $end
$upscope $end
$scope module l14 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 6" data [3:0] $end
$var wire 1 7" en $end
$var wire 4 8" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 9" din $end
$var wire 1 7" enabler $end
$var wire 1 : reset $end
$var reg 1 :" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 ;" din $end
$var wire 1 7" enabler $end
$var wire 1 : reset $end
$var reg 1 <" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 =" din $end
$var wire 1 7" enabler $end
$var wire 1 : reset $end
$var reg 1 >" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 ?" din $end
$var wire 1 7" enabler $end
$var wire 1 : reset $end
$var reg 1 @" dout $end
$upscope $end
$upscope $end
$scope module l15 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 A" data [3:0] $end
$var wire 1 B" en $end
$var wire 4 C" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 D" din $end
$var wire 1 B" enabler $end
$var wire 1 : reset $end
$var reg 1 E" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 F" din $end
$var wire 1 B" enabler $end
$var wire 1 : reset $end
$var reg 1 G" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 H" din $end
$var wire 1 B" enabler $end
$var wire 1 : reset $end
$var reg 1 I" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 J" din $end
$var wire 1 B" enabler $end
$var wire 1 : reset $end
$var reg 1 K" dout $end
$upscope $end
$upscope $end
$scope module l2 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 L" data [3:0] $end
$var wire 1 M" en $end
$var wire 4 N" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 O" din $end
$var wire 1 M" enabler $end
$var wire 1 : reset $end
$var reg 1 P" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 Q" din $end
$var wire 1 M" enabler $end
$var wire 1 : reset $end
$var reg 1 R" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 S" din $end
$var wire 1 M" enabler $end
$var wire 1 : reset $end
$var reg 1 T" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 U" din $end
$var wire 1 M" enabler $end
$var wire 1 : reset $end
$var reg 1 V" dout $end
$upscope $end
$upscope $end
$scope module l3 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 W" data [3:0] $end
$var wire 1 X" en $end
$var wire 4 Y" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 Z" din $end
$var wire 1 X" enabler $end
$var wire 1 : reset $end
$var reg 1 [" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 \" din $end
$var wire 1 X" enabler $end
$var wire 1 : reset $end
$var reg 1 ]" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 ^" din $end
$var wire 1 X" enabler $end
$var wire 1 : reset $end
$var reg 1 _" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 `" din $end
$var wire 1 X" enabler $end
$var wire 1 : reset $end
$var reg 1 a" dout $end
$upscope $end
$upscope $end
$scope module l4 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 b" data [3:0] $end
$var wire 1 c" en $end
$var wire 4 d" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 e" din $end
$var wire 1 c" enabler $end
$var wire 1 : reset $end
$var reg 1 f" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 g" din $end
$var wire 1 c" enabler $end
$var wire 1 : reset $end
$var reg 1 h" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 i" din $end
$var wire 1 c" enabler $end
$var wire 1 : reset $end
$var reg 1 j" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 k" din $end
$var wire 1 c" enabler $end
$var wire 1 : reset $end
$var reg 1 l" dout $end
$upscope $end
$upscope $end
$scope module l5 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 m" data [3:0] $end
$var wire 1 n" en $end
$var wire 4 o" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 p" din $end
$var wire 1 n" enabler $end
$var wire 1 : reset $end
$var reg 1 q" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 r" din $end
$var wire 1 n" enabler $end
$var wire 1 : reset $end
$var reg 1 s" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 t" din $end
$var wire 1 n" enabler $end
$var wire 1 : reset $end
$var reg 1 u" dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 v" din $end
$var wire 1 n" enabler $end
$var wire 1 : reset $end
$var reg 1 w" dout $end
$upscope $end
$upscope $end
$scope module l6 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 x" data [3:0] $end
$var wire 1 y" en $end
$var wire 4 z" q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 {" din $end
$var wire 1 y" enabler $end
$var wire 1 : reset $end
$var reg 1 |" dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 }" din $end
$var wire 1 y" enabler $end
$var wire 1 : reset $end
$var reg 1 ~" dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 !# din $end
$var wire 1 y" enabler $end
$var wire 1 : reset $end
$var reg 1 "# dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 ## din $end
$var wire 1 y" enabler $end
$var wire 1 : reset $end
$var reg 1 $# dout $end
$upscope $end
$upscope $end
$scope module l7 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 %# data [3:0] $end
$var wire 1 &# en $end
$var wire 4 '# q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 (# din $end
$var wire 1 &# enabler $end
$var wire 1 : reset $end
$var reg 1 )# dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 *# din $end
$var wire 1 &# enabler $end
$var wire 1 : reset $end
$var reg 1 +# dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 ,# din $end
$var wire 1 &# enabler $end
$var wire 1 : reset $end
$var reg 1 -# dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 .# din $end
$var wire 1 &# enabler $end
$var wire 1 : reset $end
$var reg 1 /# dout $end
$upscope $end
$upscope $end
$scope module l8 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 0# data [3:0] $end
$var wire 1 1# en $end
$var wire 4 2# q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 3# din $end
$var wire 1 1# enabler $end
$var wire 1 : reset $end
$var reg 1 4# dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 5# din $end
$var wire 1 1# enabler $end
$var wire 1 : reset $end
$var reg 1 6# dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 7# din $end
$var wire 1 1# enabler $end
$var wire 1 : reset $end
$var reg 1 8# dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 9# din $end
$var wire 1 1# enabler $end
$var wire 1 : reset $end
$var reg 1 :# dout $end
$upscope $end
$upscope $end
$scope module l9 $end
$var wire 1 " clk $end
$var wire 1 : cr $end
$var wire 4 ;# data [3:0] $end
$var wire 1 <# en $end
$var wire 4 =# q [3:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 ># din $end
$var wire 1 <# enabler $end
$var wire 1 : reset $end
$var reg 1 ?# dout $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 @# din $end
$var wire 1 <# enabler $end
$var wire 1 : reset $end
$var reg 1 A# dout $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 B# din $end
$var wire 1 <# enabler $end
$var wire 1 : reset $end
$var reg 1 C# dout $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 D# din $end
$var wire 1 <# enabler $end
$var wire 1 : reset $end
$var reg 1 E# dout $end
$upscope $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 4 F# address [3:0] $end
$var wire 1 " clk $end
$var wire 1 G# cs $end
$var wire 4 H# data_read [3:0] $end
$var wire 4 I# data_write [3:0] $end
$var wire 1 < rd $end
$var wire 1 ; rst $end
$var wire 1 > wrt $end
$var reg 4 J# word [3:0] $end
$var integer 32 K# i [31:0] $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 4 L# alu_in1 [3:0] $end
$var wire 4 M# alu_in2 [3:0] $end
$var wire 4 N# operations [3:0] $end
$var reg 4 O# alu_out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx O#
bx N#
bx M#
bx L#
bx K#
bz J#
bx I#
bz H#
1G#
b0 F#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
bx =#
0<#
bx ;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
bx 2#
01#
bx 0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
bx '#
0&#
bx %#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
bx z"
0y"
bx x"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
bx o"
0n"
bx m"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
bx d"
0c"
bx b"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
bx Y"
0X"
bx W"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
bx N"
0M"
bx L"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
bx C"
0B"
bx A"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
bx 8"
07"
bx 6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
bx -"
0,"
bx +"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
bx ""
0!"
bx ~
x}
x|
x{
xz
xy
xx
xw
xv
bx u
0t
bx s
xr
xq
xp
xo
xn
xm
xl
xk
bx j
0i
bx h
xg
xf
xe
xd
xc
xb
xa
x`
bx _
0^
bx ]
x\
x[
xZ
xY
xX
xW
xV
xU
bx T
xS
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
b0 ?
x>
x=
x<
0;
0:
bx 9
bx 8
bx 7
bx 6
bz 5
bx 4
bx 3
x2
b0 1
b0 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
b0 %
bx $
b0 #
1"
bx !
$end
#5000
0<
0=
0>
0S
0M"
02
b0 3
b0 *
b1 -
b1 N#
b10 0
b10 ?
b1 1
b1 F#
0"
b100100001 #
b100100001 %
#10000
1"
#15000
0"
#20000
1"
#25000
b1001 -
b1001 N#
b1 0
b1 ?
b10 1
b10 F#
0"
b100100010010 #
b100100010010 %
#30000
1"
#35000
0"
#40000
1"
#45000
0"
#50000
1"
#55000
0"
#60000
1"
#65000
0"
#70000
1"
#75000
0"
#80000
1"
#85000
0"
#90000
1"
#95000
0"
#100000
1"
#105000
0"
#110000
1"
#115000
0"
#120000
1"
#125000
0"
#130000
1"
#135000
0"
#140000
1"
#145000
0"
#150000
1"
#155000
0"
#160000
1"
#165000
0"
#170000
1"
#175000
0"
#180000
1"
#185000
0"
#190000
1"
#195000
0"
#200000
1"
#205000
0"
#210000
1"
#215000
0"
#220000
1"
#225000
0"
#230000
1"
#235000
0"
#240000
1"
#245000
0"
#250000
1"
#255000
0"
#260000
1"
#265000
0"
#270000
1"
#275000
0"
#280000
1"
#285000
0"
#290000
1"
#295000
0"
#300000
1"
#305000
0"
#310000
1"
#315000
0"
#320000
1"
#325000
0"
#330000
1"
#335000
0"
#340000
1"
#345000
0"
#350000
1"
#355000
0"
#360000
1"
#365000
0"
#370000
1"
#375000
0"
#380000
1"
#385000
0"
#390000
1"
#395000
0"
#400000
1"
#405000
0"
#410000
1"
#415000
0"
#420000
1"
#425000
0"
#430000
1"
#435000
0"
#440000
1"
#445000
0"
#450000
1"
#455000
0"
#460000
1"
#465000
0"
#470000
1"
#475000
0"
#480000
1"
#485000
0"
#490000
1"
#495000
0"
#500000
1"
#505000
